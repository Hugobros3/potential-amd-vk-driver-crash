; -------- Disassembly --------------------
shader main
  asic(VI)
  type(PS)
                                                            // s_ps_state in s0

  s_mov_b64     s[28:29], exec                          // 000000000000: BE9C017E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE077E
  s_getpc_b64   s[0:1]                                  // 000000000008: BE801C80
  s_mov_b32     m0, s3                                  // 00000000000C: BEFC0003
  s_mov_b32     s0, s2                                  // 000000000010: BE800002
  v_interp_mov_f32  v2, p0, attr1.x                     // 000000000014: D40A0402
  v_interp_p1_f32  v3, v0, attr2.x                      // 000000000018: D40C0800
  v_interp_p2_f32  v3, v1, attr2.x                      // 00000000001C: D40D0801
  v_interp_p1_f32  v4, v0, attr2.y                      // 000000000020: D4100900
  v_interp_p2_f32  v4, v1, attr2.y                      // 000000000024: D4110901
  v_mul_lo_u32  v2, v2, 48                              // 000000000028: D2850002 00016102
  v_readfirstlane_b32  s2, v2                           // 000000000030: 7E040502
  v_interp_p1_f32  v5, v0, attr0.x                      // 000000000034: D4140000
  v_interp_p2_f32  v5, v1, attr0.x                      // 000000000038: D4150001
  v_interp_p1_f32  v6, v0, attr0.y                      // 00000000003C: D4180100
  v_interp_p2_f32  v6, v1, attr0.y                      // 000000000040: D4190101
  v_interp_p1_f32  v0, v0, attr0.z                      // 000000000044: D4000200
  v_interp_p2_f32  v0, v1, attr0.z                      // 000000000048: D4010201
  v_mul_f32     v1, 0x3f0c13b4, v5                      // 00000000004C: 0A020AFF 3F0C13B4
  v_madmk_f32   v1, v6, 0x3f521d8e, v1                  // 000000000054: 2E020306 3F521D8E
  s_mov_b32     s3, 0x3e2817a5                          // 00000000005C: BE8300FF 3E2817A5
  v_mad_f32     v1, s3, v0, v1 clamp                    // 000000000064: D1C18001 04060003
  s_mov_b64     s[4:5], exec                            // 00000000006C: BE84017E
  s_mov_b64     s[6:7], exec                            // 000000000070: BE86017E
label_001D:
  v_cmp_eq_u32  vcc, s2, v2                             // 000000000074: 7D940402
  s_and_saveexec_b64  s[8:9], vcc                       // 000000000078: BE88206A
  s_cbranch_execz  label_0039                           // 00000000007C: BF880019
  s_load_dwordx8  s[12:19], s[0:1], s2                  // 000000000080: C00C0300 00000002
  s_mov_b64     s[10:11], exec                          // 000000000088: BE8A017E
  s_mov_b64     s[20:21], exec                          // 00000000008C: BE94017E
  s_nop         0x0000                                  // 000000000090: BF800000
  s_nop         0x0000                                  // 000000000094: BF800000
  s_nop         0x0000                                  // 000000000098: BF800000
  s_nop         0x0000                                  // 00000000009C: BF800000
label_0028:
  v_readfirstlane_b32  s3, v2                           // 0000000000A0: 7E060502
  v_cmp_eq_u32  vcc, s3, v2                             // 0000000000A4: 7D940403
  s_and_saveexec_b64  s[22:23], vcc                     // 0000000000A8: BE96206A
  s_cbranch_execz  label_0034                           // 0000000000AC: BF880008
  s_add_u32     s3, 32, s3                              // 0000000000B0: 800303A0
  s_load_dwordx4  s[24:27], s[0:1], s3                  // 0000000000B4: C0080600 00000003
  s_waitcnt     lgkmcnt(0)                              // 0000000000BC: BF8C007F
  image_sample  v[7:10], v[3:6], s[12:19], s[24:27] dmask:0xf // 0000000000C0: F0800F00 00C30703
  s_andn2_b64   s[20:21], s[20:21], exec                // 0000000000C8: 89947E14
  s_cbranch_scc0  label_0036                            // 0000000000CC: BF840002
label_0034:
  s_and_b64     exec, s[22:23], s[20:21]                // 0000000000D0: 86FE1416
  s_branch      label_0028                              // 0000000000D4: BF82FFF2
label_0036:
  s_mov_b64     exec, s[10:11]                          // 0000000000D8: BEFE010A
  s_andn2_b64   s[6:7], s[6:7], exec                    // 0000000000DC: 89867E06
  s_cbranch_scc0  label_003B                            // 0000000000E0: BF840002
label_0039:
  s_and_b64     exec, s[8:9], s[6:7]                    // 0000000000E4: 86FE0608
  s_branch      label_001D                              // 0000000000E8: BF82FFE2
label_003B:
  s_mov_b64     exec, s[4:5]                            // 0000000000EC: BEFE0104
  s_waitcnt     vmcnt(0)                                // 0000000000F0: BF8C0F70
  v_cmp_eq_f32  vcc, 0, v10                             // 0000000000F4: 7C841480
  s_andn2_b64   s[28:29], s[28:29], vcc                 // 0000000000F8: 899C6A1C
  s_cbranch_scc0  label_0050                            // 0000000000FC: BF840010
  s_and_b64     exec, exec, s[28:29]                    // 000000000100: 86FE1C7E
  s_wqm_b64     exec, exec                              // 000000000104: BEFE077E
  v_mov_b32     v2, 0x3e4ccccd                          // 000000000108: 7E0402FF 3E4CCCCD
  s_mov_b32     s0, 0x3f4ccccd                          // 000000000110: BE8000FF 3F4CCCCD
  v_mac_f32     v2, s0, v1                              // 000000000118: 2C040200
  v_mul_f32     v1, v7, v2                              // 00000000011C: 0A020507
  v_mul_f32     v3, v8, v2                              // 000000000120: 0A060508
  v_mul_f32     v2, v9, v2                              // 000000000124: 0A040509
  v_add_f32     v4, v5, 1.0 div:2                       // 000000000128: D1010004 1801E505
  v_add_f32     v5, v6, 1.0 div:2                       // 000000000130: D1010005 1801E506
  v_add_f32     v0, v0, 1.0 div:2                       // 000000000138: D1010000 1801E500
label_0050:
  v_cvt_pkrtz_f16_f32  v4, v4, v5                       // 000000000140: D2960004 00020B04
  v_cvt_pkrtz_f16_f32  v0, v0, 1.0                      // 000000000148: D2960000 0001E500
  v_cvt_pkrtz_f16_f32  v1, v1, v3                       // 000000000150: D2960001 00020701
  v_cvt_pkrtz_f16_f32  v2, v2, 1.0                      // 000000000158: D2960002 0001E502
  s_mov_b64     exec, s[28:29]                          // 000000000160: BEFE011C
  exp           mrt1, v4, v4, v0, v0 compr vm           // 000000000164: C400141F 00000004
  exp           mrt0, v1, v1, v2, v2 done compr vm      // 00000000016C: C4001C0F 00000201
  s_endpgm                                              // 000000000174: BF810000
end

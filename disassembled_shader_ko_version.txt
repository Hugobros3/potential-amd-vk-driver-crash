; -------- Disassembly --------------------
shader main
  asic(VI)
  type(PS)
                                                            // s_ps_state in s0

  s_mov_b64     s[28:29], exec                          // 000000000000: BE9C017E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE077E
  s_getpc_b64   s[0:1]                                  // 000000000008: BE801C80
  s_mov_b32     m0, s3                                  // 00000000000C: BEFC0003
  s_mov_b32     s0, s2                                  // 000000000010: BE800002
  v_interp_mov_f32  v2, p0, attr0.x                     // 000000000014: D40A0002
  v_interp_p1_f32  v3, v0, attr1.x                      // 000000000018: D40C0400
  v_interp_p2_f32  v3, v1, attr1.x                      // 00000000001C: D40D0401
  v_interp_p1_f32  v4, v0, attr1.y                      // 000000000020: D4100500
  v_interp_p2_f32  v4, v1, attr1.y                      // 000000000024: D4110501
  v_mul_lo_u32  v2, v2, 48                              // 000000000028: D2850002 00016102
  s_mov_b64     s[2:3], exec                            // 000000000030: BE82017E
  s_mov_b64     s[4:5], exec                            // 000000000034: BE84017E
label_000E:
  v_readfirstlane_b32  s6, v2                           // 000000000038: 7E0C0502
  v_cmp_eq_u32  vcc, s6, v2                             // 00000000003C: 7D940406
  s_and_saveexec_b64  s[8:9], vcc                       // 000000000040: BE88206A
  s_cbranch_execz  label_0029                           // 000000000044: BF880017
  s_load_dwordx8  s[12:19], s[0:1], s6                  // 000000000048: C00C0300 00000006
  s_mov_b64     s[6:7], exec                            // 000000000050: BE86017E
  s_mov_b64     s[10:11], exec                          // 000000000054: BE8A017E
  s_nop         0x0000                                  // 000000000058: BF800000
  s_nop         0x0000                                  // 00000000005C: BF800000
label_0018:
  v_readfirstlane_b32  s20, v2                          // 000000000060: 7E280502
  v_cmp_eq_u32  vcc, s20, v2                            // 000000000064: 7D940414
  s_and_saveexec_b64  s[22:23], vcc                     // 000000000068: BE96206A
  s_cbranch_execz  label_0024                           // 00000000006C: BF880008
  s_add_u32     s20, 32, s20                            // 000000000070: 801414A0
  s_load_dwordx4  s[24:27], s[0:1], s20                 // 000000000074: C0080600 00000014
  s_waitcnt     lgkmcnt(0)                              // 00000000007C: BF8C007F
  image_sample  v[2:5], v[3:6], s[12:19], s[24:27] dmask:0xf // 000000000080: F0800F00 00C30203
  s_andn2_b64   s[10:11], s[10:11], exec                // 000000000088: 898A7E0A
  s_cbranch_scc0  label_0026                            // 00000000008C: BF840002
label_0024:
  s_and_b64     exec, s[22:23], s[10:11]                // 000000000090: 86FE0A16
  s_branch      label_0018                              // 000000000094: BF82FFF2
label_0026:
  s_mov_b64     exec, s[6:7]                            // 000000000098: BEFE0106
  s_andn2_b64   s[4:5], s[4:5], exec                    // 00000000009C: 89847E04
  s_cbranch_scc0  label_002B                            // 0000000000A0: BF840002
label_0029:
  s_and_b64     exec, s[8:9], s[4:5]                    // 0000000000A4: 86FE0408
  s_branch      label_000E                              // 0000000000A8: BF82FFE3
label_002B:
  s_mov_b64     exec, s[2:3]                            // 0000000000AC: BEFE0102
  s_waitcnt     vmcnt(0)                                // 0000000000B0: BF8C0F70
  v_cmp_eq_f32  vcc, 0, v5                              // 0000000000B4: 7C840A80
  s_andn2_b64   s[28:29], s[28:29], vcc                 // 0000000000B8: 899C6A1C
  s_cbranch_scc0  label_004E                            // 0000000000BC: BF84001E
  s_and_b64     exec, exec, s[28:29]                    // 0000000000C0: 86FE1C7E
  s_wqm_b64     exec, exec                              // 0000000000C4: BEFE077E
  v_interp_p1_f32  v5, v0, attr2.x                      // 0000000000C8: D4140800
  v_interp_p2_f32  v5, v1, attr2.x                      // 0000000000CC: D4150801
  v_interp_p1_f32  v6, v0, attr2.y                      // 0000000000D0: D4180900
  v_interp_p2_f32  v6, v1, attr2.y                      // 0000000000D4: D4190901
  v_interp_p1_f32  v0, v0, attr2.z                      // 0000000000D8: D4000A00
  v_interp_p2_f32  v0, v1, attr2.z                      // 0000000000DC: D4010A01
  v_mul_f32     v1, 0x3f0c13b4, v5                      // 0000000000E0: 0A020AFF 3F0C13B4
  v_madmk_f32   v1, v6, 0x3f521d8e, v1                  // 0000000000E8: 2E020306 3F521D8E
  s_mov_b32     s0, 0x3e2817a5                          // 0000000000F0: BE8000FF 3E2817A5
  v_mad_f32     v1, s0, v0, v1 clamp                    // 0000000000F8: D1C18001 04060000
  v_mov_b32     v7, 0x3e4ccccd                          // 000000000100: 7E0E02FF 3E4CCCCD
  s_mov_b32     s0, 0x3f4ccccd                          // 000000000108: BE8000FF 3F4CCCCD
  v_mac_f32     v7, s0, v1                              // 000000000110: 2C0E0200
  v_mul_f32     v1, v2, v7                              // 000000000114: 0A020F02
  v_mul_f32     v2, v3, v7                              // 000000000118: 0A040F03
  v_mul_f32     v3, v4, v7                              // 00000000011C: 0A060F04
  v_add_f32     v4, v5, 1.0 div:2                       // 000000000120: D1010004 1801E505
  v_add_f32     v5, v6, 1.0 div:2                       // 000000000128: D1010005 1801E506
  v_add_f32     v0, v0, 1.0 div:2                       // 000000000130: D1010000 1801E500
label_004E:
  v_cvt_pkrtz_f16_f32  v4, v4, v5                       // 000000000138: D2960004 00020B04
  v_cvt_pkrtz_f16_f32  v0, v0, 1.0                      // 000000000140: D2960000 0001E500
  v_cvt_pkrtz_f16_f32  v1, v1, v2                       // 000000000148: D2960001 00020501
  v_cvt_pkrtz_f16_f32  v2, v3, 1.0                      // 000000000150: D2960002 0001E503
  s_mov_b64     exec, s[28:29]                          // 000000000158: BEFE011C
  exp           mrt1, v4, v4, v0, v0 compr vm           // 00000000015C: C400141F 00000004
  exp           mrt0, v1, v1, v2, v2 done compr vm      // 000000000164: C4001C0F 00000201
  s_endpgm                                              // 00000000016C: BF810000
end